<?xml version="1.0" encoding="UTF-8" ?>
<!-- DOCTYPE이 sqlMap인 xml 파일은 처리할 SQL 명령을 기억하는 xml 파일이다. -->
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="com.tjoeun.vo.GuestbookVO">
	<!-- id: SQL 명령을 식별한다. -->
	<!-- parameterClass: SQL 명령으로 DAO 클래스에서 전달되는 데이터의 타입을 적는다. -->
	<!-- resultClass: SQL 명령문이 실행되고 DAO 클래스로 리턴되는 데이터의 타입을 적는다. -->
	
	<!-- 글 1건을 저장한다.-->
	<insert id="insert" parameterClass="vo">
		insert into guestbook (idx, name, password, memo, ip) values (guestbook_idx_seq.nextval, #name#, #password#, #memo#, #ip#)
	</insert>

	<!-- 전체 글의 개수를 얻어온다. -->
	<select id="selectCount" resultClass="int">
		select count(*) from guestbook
	</select>

	<!-- 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectList" parameterClass="java.util.HashMap" resultClass="vo">
		<![CDATA[
			select * from (
			  select rownum runm, TT.* from (
					select * from GUESTBOOK order by IDX desc
				) TT where rownum <= #endNo#
		  )where runm >= #startNo#
		]]>
	</select>

	<!-- 글 1건을 얻어온다. -->
	<select id="selectByIdx" parameterClass="int" resultClass="vo">
		SELECT * FROM Guestbook WHERE idx = #idx#
	</select>

	<!-- 글 1건을 삭제한다. -->
	<delete id="delete" parameterClass="int">
		delete from guestbook where idx = #idx#
	</delete>

	<!-- 글 1건을 수정한다. -->
	<update id="update" parameterClass="vo">
		update GUESTBOOK set memo = #memo# where IDX = #idx#
	</update>

	<!-- 메모에 검색어에 해당하는 글 개수를 얻어온다.. -->
	<select id="selectCountMemo" parameterClass="String" resultClass="int">
		select count(*) from guestbook where memo like '%'||#item#||'%'
	</select>

	<!-- memo 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListMemo" parameterClass="param" resultClass="vo">
		<![CDATA[
			select * from (
				select rownum rnum, GG.* from (
					select * from GUESTBOOK where MEMO like '%'||#item#||'%' order by IDX desc
			  ) GG where rownum <= #endNo#
		  ) where rnum >= #startNo#
		]]>
	</select>

	<!-- 이름에 검색어에 해당하는 글 개수를 얻어온다.. -->
	<select id="selectCountName" parameterClass="String" resultClass="int">
		select count(*) from guestbook where NAME like '%'||#item#||'%'
	</select>

	<!-- memo 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListName" parameterClass="param" resultClass="vo">
		<![CDATA[
			select * from (
				select rownum rnum, GG.* from (
					select * from GUESTBOOK where NAME like '%'||#item#||'%' order by IDX desc
			  ) GG where rownum <= #endNo#
		  ) where rnum >= #startNo#
		]]>
	</select>
	<!-- 이름에 검색어에 해당하는 글 개수를 얻어온다.. -->
	<select id="selectCountMemoName" parameterClass="String" resultClass="int">
		select count(*) from guestbook where NAME like '%'||#item#||'%' OR MEMO LIKE '%'||#item#||'%'
	</select>

	<!-- memo 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListMemoName" parameterClass="param" resultClass="vo">
		<![CDATA[
			select * from (
				select rownum rnum, GG.* from (
					select * from GUESTBOOK where NAME like '%'||#item#||'%'  OR MEMO LIKE '%'||#item#||'%' order by IDX desc
			  ) GG where rownum <= #endNo#
		  ) where rnum >= #startNo#
		]]>
	</select>

	<!-- 카테고리별 검색어를 포함하는 글의 개수를 얻어온다. => 동적 쿼리 사용 -->
	<select id="selectCountMulti" parameterClass="param" resultClass="int">
		<!--
			<isEqual>태그를 사용해 sql 명령의 실행 조건을 지정할 수 있다.
		-->
		<!--
			Param 클래스의 Category 필드에 "내용"이라고 저장되어 있으면 실행한다.
			property 속성에는 parameterClass로 넘어온 조건을 비교할 필드 이름을 적는다.
			compareValue 속성에는 property 속성에 지정한 필드에 저장된 내용과 비교할 값을 적는다.
		-->
		<!-- <isEqual property="category" compareValue="내용">
			select count(*) from guestbook where memo like '%'||#item#||'%'
		</isEqual>
		<isEqual property="category" compareValue="이름">
			select count(*) from guestbook where NAME like '%'||#item#||'%'
		</isEqual>
		<isEqual property="category" compareValue="내용+이름">
			select count(*) from guestbook where NAME like '%'||#item#||'%' OR MEMO LIKE '%'||#item#||'%'
		</isEqual>
			-->
		select count(*) from guestbook where
		<isEqual property="category" compareValue="내용">
			memo like '%'||#item#||'%'
		</isEqual>
		<isEqual property="category" compareValue="이름">
			NAME like '%'||#item#||'%'
		</isEqual>
		<isEqual property="category" compareValue="내용+이름">
			NAME like '%'||#item#||'%' OR MEMO LIKE '%'||#item#||'%'
		</isEqual>
	</select>

	<select id="selectListMulti" parameterClass="param" resultClass="vo">
		select * from (
			  select rownum rnum, GG.* from (
					select * from GUESTBOOK where
					<isEqual property="category" compareValue="내용">
						memo like '%'||#item#||'%'
					</isEqual>
					<isEqual property="category" compareValue="이름">
						name like '%'||#item#||'%'
					</isEqual>
					<isEqual property="category" compareValue="내용+이름">
						name like '%'||#item#||'%' OR memo LIKE '%'||#item#||'%'
					</isEqual>

				order by IDX desc
		<![CDATA[
				) GG where rownum <= #endNo#
		  ) where rnum >= #startNo#
		]]>
	</select>
</sqlMap>













